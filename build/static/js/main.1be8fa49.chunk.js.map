{"version":3,"sources":["components/header.js","components/footer.js","components/layout.js","views/Home.js","views/Login.js","views/Create.js","App.js","index.js"],"names":["header","to","footer","Layout","children","className","Home","props","useState","plants","setPlants","useEffect","isLoggedIn","getPlants","owner","user","_id","userId","a","url","axios","method","response","data","plantsList","map","plant","key","name","species","age","onClick","id","console","log","Login","email","setEmail","password","setPassword","history","useHistory","loginSubmit","e","preventDefault","localStorage","setItem","token","logIn","updateUser","push","type","autoComplete","value","onChange","target","Newplant","plantName","setPlantName","plantSpecies","setPlantSpecies","plantAge","setPlantAge","submitHandler","headers","authorization","res","App","setIsLoggedIn","setUser","exact","path","userObject","Create","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1be8fa49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport \"./header.css\";\r\n\r\nfunction header() {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <h4>Botanic Tracker</h4>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n        <NavLink to=\"/create\">Create</NavLink>\r\n        <NavLink to=\"/login\">Login</NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nexport default function footer() {\r\n  return (\r\n    <footer>\r\n      <h6>This is the footer</h6>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport Footer from \"./footer\";\r\nimport \"../App.css\";\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <>\r\n      <Header className=\"container\"></Header>\r\n      <main>{children}</main>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\n\r\nconst Home = (props) => {\r\n  const [plants, setPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!props.isLoggedIn) {\r\n      getPlants();\r\n    } else {\r\n      getPlants({ owner: props.user._id });\r\n    }\r\n  }, [props.isLoggedIn, props.user._id]);\r\n\r\n  const getPlants = async (userId) => {\r\n    let url = \"https://botanictracker-api.herokuapp.com/plants\";\r\n    if (userId) {\r\n      url = url + \"?owner=\" + userId.owner;\r\n    }\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: url,\r\n    });\r\n    setPlants(response.data);\r\n  };\r\n\r\n  const deletePlant = (id) => {\r\n    //TODO show delete modal\r\n    console.log(id);\r\n  };\r\n  const editPlant = (id) => {\r\n    //TODO show edit modal\r\n    console.log(id);\r\n  };\r\n\r\n  const plantsList = plants.map((plant) => (\r\n    <div key={plant._id} className=\"card\">\r\n      <h3>{plant.name}</h3>\r\n      <p>{plant.species}</p>\r\n      <p>{plant.age}</p>\r\n      <button onClick={() => deletePlant(plant._id)}>x</button>\r\n      <button onClick={() => editPlant(plant._id)}>e</button>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"hero\">\r\n        <h1>\"Track your plants!\"</h1>\r\n      </section>\r\n\r\n      <section className=\"hero\">\r\n        <h3>Your plants</h3>\r\n        <div className=\"plants\">\r\n          <ul>{plantsList}</ul>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const loginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: \"https://botanictracker-api.herokuapp.com/users/login\",\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    props.logIn();\r\n    props.updateUser(response.data.user);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    history.push(\"/\");\r\n  };\r\n  const emailHandler = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const passwordHandler = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          value={email}\r\n          onChange={emailHandler}\r\n        />\r\n\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          autoComplete=\"password\"\r\n          value={password}\r\n          onChange={passwordHandler}\r\n        />\r\n\r\n        <button onClick={loginSubmit}>Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Newplant = () => {\r\n  const [plantName, setPlantName] = useState(\"\");\r\n  const [plantSpecies, setPlantSpecies] = useState(\"\");\r\n  const [plantAge, setPlantAge] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: `https://botanictracker-api.herokuapp.com/plants/`,\r\n      data: {\r\n        name: plantName,\r\n        species: plantSpecies,\r\n        age: plantAge,\r\n      },\r\n      headers: { authorization: `Bearer ${localStorage.token}` },\r\n    });\r\n    console.log(res);\r\n    history.push(\"/\");\r\n  };\r\n  const nameHandler = (e) => {\r\n    setPlantName(e.target.value);\r\n  };\r\n  const speciesHandler = (e) => {\r\n    setPlantSpecies(e.target.value);\r\n  };\r\n  const ageHandler = (e) => {\r\n    setPlantAge(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create a new plant!</h3>\r\n      <form>\r\n        <label>Plant Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={plantName}\r\n          onChange={nameHandler}\r\n        ></input>\r\n        <label>Species</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"species\"\r\n          value={plantSpecies}\r\n          onChange={speciesHandler}\r\n        ></input>\r\n        <label>Age</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"age\"\r\n          value={plantAge}\r\n          onChange={ageHandler}\r\n        ></input>\r\n        <button onClick={submitHandler}>Create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Newplant;\r\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Layout from \"./components/layout\";\nimport Home from \"./views/Home\";\nimport Login from \"./views/Login\";\nimport Create from \"./views/Create\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  const logIn = () => {\n    setIsLoggedIn(!isLoggedIn);\n  };\n  const updateUser = (userObject) => {\n    setUser(userObject);\n  };\n\n  return (\n    <>\n      <Layout isLoggedIn={isLoggedIn} user={user}>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home isLoggedIn={isLoggedIn} user={user} />\n            </Route>\n            <Route path=\"/login\">\n              <Login logIn={logIn} updateUser={updateUser} />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}